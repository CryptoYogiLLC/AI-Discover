# Pre-commit hooks for code quality and security
# Run `pre-commit install` to set up the git hook scripts

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: detect-private-key
      - id: mixed-line-ending
        args: ["--fix=lf"]

  # Python specific hooks
  - repo: https://github.com/psf/black
    rev: 24.3.0
    hooks:
      - id: black
        language_version: python3.13
        files: ^backend/
        exclude: ^backend/migrations/

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.3.5
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        files: ^backend/
        exclude: ^backend/migrations/

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        files: ^backend/
        exclude: ^backend/(tests|migrations)/
        args: [--config-file=backend/mypy.ini]
        additional_dependencies:
          - types-requests
          - types-redis
          - sqlalchemy[mypy]
          - pydantic
          - pytest
          - httpx

  # Python security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        args: [-r, backend/app, -f, json, -o, /dev/null]
        files: ^backend/app/

  # Python test coverage check (local)
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: bash -c 'cd backend && python -m pytest tests/unit -x -v --tb=short || true'
        language: system
        files: ^backend/.*\.py$
        pass_filenames: false
        stages: [push]

  # JavaScript/TypeScript hooks
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.0.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        args: [--config, frontend/eslint.config.js]
        additional_dependencies:
          - eslint@9.32.0
          - eslint-config-next@15.4.4
          - "@typescript-eslint/eslint-plugin@8.0.0"
          - "@typescript-eslint/parser@8.0.0"
          - "@eslint/js@9.32.0"
          - eslint-plugin-react@7.33.2
          - eslint-plugin-react-hooks@5.2.0
          - eslint-plugin-jsx-a11y@6.10.2
          - "@next/eslint-plugin-next@15.4.4"
          - globals@16.3.0

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|css|scss|json|md|yaml|yml)$
        exclude: ^(backend/|.*/migrations/|package-lock\.json)

  # Frontend tests (local)
  - repo: local
    hooks:
      - id: jest-check
        name: jest-check
        entry: bash -c 'cd frontend && npm test -- --passWithNoTests --maxWorkers=2 || true'
        language: system
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        pass_filenames: false
        stages: [push]

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: package-lock.json

  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.18.2
    hooks:
      - id: gitleaks

  # Docker linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: ["--fix", "--config", ".markdownlint.json"]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]

  # SQL linting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.0.5
    hooks:
      - id: sqlfluff-lint
        files: \.(sql)$
      - id: sqlfluff-fix
        files: \.(sql)$

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.20.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Configuration for specific tools
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: [mypy, eslint] # These require additional setup
  submodules: false
